#!/usr/bin/env bash
# .sh/bin/newlxd 20171013 - 20190120
# Copyright (C) 1995-2018 Mark Constable <markc@renta.net> (AGPL-3.0)

# No need to be run as root so we need OSREL and DTYPE

[[ -z $1 || $1 =~ -h ]] && echo "Usage: newlxd FQDN [(small)|medium|large] [(mysql)|sqlite] [distro(bionic)] [static IP/24] [gateway IP]" && exit 1

VHOST=$1
_HOST=${VHOST/%\.*/}
DTYPE=${3:-'mysql'}
OSREL=${4:-'bionic'}
NEWIP=${5:-''}
NEWGW=${6:-''}

# Modify these container profiles to suit your needs
if [[ $2 == large ]]; then
    PNAME=large
    PSIZE=10000MB
    P_MEM=1000MB
    P_CPU=3
elif [[ $2 == medium ]]; then
    PNAME=medium
    PSIZE=5000MB
    P_MEM=500MB
    P_CPU=2
else
    PNAME=small
    PSIZE=2000MB
    P_MEM=200MB
    P_CPU=1
fi

if [[ -z $(lxc profile list | grep "| $PNAME" | awk '{print $2}') ]]; then
    echo "--- Create $PNAME profile with $P_MEM mem, $P_CPU cpu, $PSIZE size"
    lxc profile create $PNAME
    lxc profile set $PNAME limits.memory $P_MEM
    lxc profile set $PNAME limits.cpu $P_CPU
    lxc network attach-profile lxdbr0 $PNAME eth0
    lxc profile device add $PNAME root disk path=/ pool="lxd-pool"
    lxc profile device set $PNAME root size $PSIZE
fi

lxc remote list | grep -q ubuntu-minimal

if [[ $? -eq 1 ]]; then
    lxc remote add --protocol simplestreams ubuntu-minimal https://cloud-images.ubuntu.com/minimal/releases/
fi

lxc launch ubuntu-minimal:$OSREL $_HOST -p $PNAME

echo "--- Setup '$_HOST' hostname as $VHOST"
lxc exec $_HOST -- bash -c "echo $_HOST > /etc/hostname; hostname $_HOST"

if [[ $NEWIP ]]; then
    echo "--- Setup static IP in /etc/systemd/network/00-static.network"
    lxc exec $_HOST -- bash -c "echo -e '[Match]\nName=e*\n\n[Network]\nAddress=$NEWIP\nGateway=$NEWGW' > /etc/systemd/network/00-static.network"
else
    echo "--- Check for /etc/systemd/network/20-dhcp.network and add if missing"
    lxc exec $_HOST -- bash -c "[[ ! -f /etc/systemd/network/20-dhcp.network ]] && echo -e '[Match]\nName=e*\n\n[Network]\nDHCP=yes' > /etc/systemd/network/20-dhcp.network"
fi

echo "--- Wait 60 secs for network to become available..."
lxc exec $_HOST -- systemctl restart systemd-networkd

sleep 60

echo "--- Update current package list"
lxc exec $_HOST -- apt-get -qq update

echo "--- Upgrade current packages"
lxc exec $_HOST -- apt-get -qq -y -u dist-upgrade > /dev/null 2>&1

echo "--- Make sure basic essential packages are available"
lxc exec $_HOST -- apt-get -qq -y install --no-install-recommends \
    ca-certificates curl git nano net-tools openssh-server rsync wget > /dev/null 2>&1

# Continue container setup if the HOST is using the netserva/sh repo
if [[ -d ~/.sh ]]; then
    echo "--- Setting up NetServa SH/HCP in '$_HOST' container"
    lxc exec $_HOST -- bash -c "[[ ! -d /root/.ssh ]] && mkdir /root/.ssh && chmod 0700 /root/.ssh"
    [[ -f ~/.ssh/id_rsa.pub ]] && {
        lxc file push --mode=600 ~/.ssh/id_rsa.pub $_HOST/root/.ssh/authorized_keys
        lxc exec $_HOST -- bash -c "chown 0:0 /root/.ssh/authorized_keys"
    }
    lxc exec $_HOST -- bash -c "curl -s https://raw.githubusercontent.com/netserva/sh/master/bin/setup-sh | bash"
    lxc exec $_HOST -- bash -lc "/root/.sh/bin/setup-all $VHOST $DTYPE"
    LXDIP=$(lxc exec $_HOST -- bash -lc "hostname -i|cut -d' ' -f -1")
    echo "--- setup-ssh $VHOST $LXDIP"
fi

systemd-cat -t hlog echo "$(whoami) $(basename $0) $*"
